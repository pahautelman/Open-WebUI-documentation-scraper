reference: https://docs.openwebui.com/troubleshooting/password-reset
title: Resetting Your Admin Password üóùÔ∏è

üõ†Ô∏è Troubleshootingüîë Reset Admin Password

üõ†Ô∏è Troubleshooting

üîë Reset Admin Password

If you've forgotten your admin password, don't worry! Below you'll find step-by-step guides to reset your admin password for Docker üê≥ deployments and local installations of Open WebUI.

For Docker Deployments üê≥‚Äã

Follow these steps to reset the admin password for Open WebUI when deployed using Docker.

Step 1: Generate a New Password Hash üîê‚Äã

First, you need to create a bcrypt hash of your new password. Run the following command on your local machine, replacing your-new-password with the password you wish to use:

your-new-password

htpasswd -bnBC 10 "" your-new-password | tr -d ':\n'

htpasswd -bnBC 10 "" your-new-password | tr -d ':\n'

Note: The output will include a bcrypt hash with special characters that need to be handled carefully. Any $ characters in the hash will need to be triple-escaped (replaced with \\\) to be used correctly in the next step.

$

\\\

Step 2: Update the Password in Docker üîÑ‚Äã

Next, you'll update the password in your Docker deployment. Replace HASH in the command below with the bcrypt hash generated in Step 1, making sure to triple-escape any $ characters. Also, replace admin@example.com with the email address linked to your admin account.

HASH

$

admin@example.com

Important: The following command may not work in all cases. If it doesn't work for you, try the alternative command below it.

docker run --rm -v open-webui:/data alpine/socat EXEC:"bash -c 'apk add sqlite && echo UPDATE auth SET password='\''HASH'\'' WHERE email='\''admin@example.com'\''; | sqlite3 /data/webui.db'", STDIO

docker run --rm -v open-webui:/data alpine/socat EXEC:"bash -c 'apk add sqlite && echo UPDATE auth SET password='\''HASH'\'' WHERE email='\''admin@example.com'\''; | sqlite3 /data/webui.db'", STDIO

For Local Installations üíª‚Äã

If you have a local installation of Open WebUI, here's how you can reset your admin password directly on your system.

Step 1: Generate a New Password Hash üîê‚Äã

Just as with the Docker method, start by generating a bcrypt hash of your new password using the following command. Remember to replace your-new-password with your new password:

your-new-password

htpasswd -bnBC 10 "" your-new-password | tr -d ':\n'

htpasswd -bnBC 10 "" your-new-password | tr -d ':\n'

Step 2: Update the Password Locally üîÑ‚Äã

Now, navigate to the open-webui directory on your local machine. Update your password by replacing HASH with the bcrypt hash from Step 1 and admin@example.com with your admin account email, and execute:

open-webui

HASH

admin@example.com

sqlite3 backend/data/webui.db "UPDATE auth SET password='HASH' WHERE email='admin@example.com';"

sqlite3 backend/data/webui.db "UPDATE auth SET password='HASH' WHERE email='admin@example.com';"

Alternate Docker Method‚Äã

If you have issues with the above. I had issues chaining the bash commands in alpine/socat, since bash doesn't exist.

bash

alpine/socat

bash

Run alpine linux connected to the open-webui volume. docker run -it --rm -v open-webui:/path/to/data alpine /path/to/data depends on your volume settings. Install apache2-utils and sqlite: apk add apache2-utils sqlite Generate bcrypt hash: htpasswd -bnBC 10 "" your-new-password | tr -d ':' Update password: sqlite3 /path/to/data/webui.db UPDATE auth SET password='HASH' WHERE email='admin@example.com';-- exit sqlite: [Ctrl + d]

Run alpine linux connected to the open-webui volume. docker run -it --rm -v open-webui:/path/to/data alpine /path/to/data depends on your volume settings. Install apache2-utils and sqlite: apk add apache2-utils sqlite Generate bcrypt hash: htpasswd -bnBC 10 "" your-new-password | tr -d ':' Update password: sqlite3 /path/to/data/webui.db UPDATE auth SET password='HASH' WHERE email='admin@example.com';-- exit sqlite: [Ctrl + d]

Run alpine linux connected to the open-webui volume.

alpine

docker run -it --rm -v open-webui:/path/to/data alpine

docker run -it --rm -v open-webui:/path/to/data alpine

/path/to/data depends on your volume settings.

/path/to/data

Install apache2-utils and sqlite: apk add apache2-utils sqlite Generate bcrypt hash: htpasswd -bnBC 10 "" your-new-password | tr -d ':' Update password: sqlite3 /path/to/data/webui.db UPDATE auth SET password='HASH' WHERE email='admin@example.com';-- exit sqlite: [Ctrl + d]

Install apache2-utils and sqlite: apk add apache2-utils sqlite

Install apache2-utils and sqlite:

apache2-utils

sqlite

apk add apache2-utils sqlite

apk add apache2-utils sqlite

Generate bcrypt hash: htpasswd -bnBC 10 "" your-new-password | tr -d ':'

Generate bcrypt hash:

bcrypt

htpasswd -bnBC 10 "" your-new-password | tr -d ':'

htpasswd -bnBC 10 "" your-new-password | tr -d ':'

Update password: sqlite3 /path/to/data/webui.db UPDATE auth SET password='HASH' WHERE email='admin@example.com';-- exit sqlite: [Ctrl + d]

Update password:

sqlite3 /path/to/data/webui.db

sqlite3 /path/to/data/webui.db

UPDATE auth SET password='HASH' WHERE email='admin@example.com';-- exit sqlite: [Ctrl + d]

UPDATE auth SET password='HASH' WHERE email='admin@example.com';-- exit sqlite: [Ctrl + d]

Nuking All the Data‚Äã

If you want to completely reset Open WebUI‚Äîincluding all user data, settings, and passwords‚Äîfollow these steps to remove the webui.db file.

webui.db

Step 1: Locate webui.db in Your Python Environment‚Äã

webui.db

If you‚Äôre unsure where webui.db is located (especially if you're using a virtual environment), you can find out by following these steps:

webui.db

Activate your virtual environment (if applicable). Open a Python shell: python Run the following code inside the Python shell:

Activate your virtual environment (if applicable).

Activate your virtual environment (if applicable).

Open a Python shell: python

Open a Python shell: python

Run the following code inside the Python shell:

Run the following code inside the Python shell:

import os import open_webui # Show where the Open WebUI package is installed print("Open WebUI is installed at:", open_webui.__file__) # Construct a potential path to webui.db (commonly located in 'data/webui.db') db_path = os.path.join(os.path.dirname(open_webui.__file__), "data", "webui.db") print("Potential path to webui.db:", db_path) # Check if webui.db exists at that path if os.path.exists(db_path): print("webui.db found at:", db_path) else: print("webui.db not found at:", db_path)

import os import open_webui # Show where the Open WebUI package is installed print("Open WebUI is installed at:", open_webui.__file__) # Construct a potential path to webui.db (commonly located in 'data/webui.db') db_path = os.path.join(os.path.dirname(open_webui.__file__), "data", "webui.db") print("Potential path to webui.db:", db_path) # Check if webui.db exists at that path if os.path.exists(db_path): print("webui.db found at:", db_path) else: print("webui.db not found at:", db_path)

Examine the output: If the file is found, you‚Äôll see its exact path. If not, you may need to perform a broader filesystem search (e.g., using find on Linux or a global file search on Windows/Mac).

Examine the output: If the file is found, you‚Äôll see its exact path. If not, you may need to perform a broader filesystem search (e.g., using find on Linux or a global file search on Windows/Mac).

If the file is found, you‚Äôll see its exact path. If not, you may need to perform a broader filesystem search (e.g., using find on Linux or a global file search on Windows/Mac).

If the file is found, you‚Äôll see its exact path.

If not, you may need to perform a broader filesystem search (e.g., using find on Linux or a global file search on Windows/Mac).

find

Step 2: Delete webui.db‚Äã

webui.db

Once you‚Äôve located the file, remove it using a command similar to:

rm -rf /path/to/your/python/environment/lib/pythonX.X/site-packages/open_webui/data/webui.db

rm -rf /path/to/your/python/environment/lib/pythonX.X/site-packages/open_webui/data/webui.db

Warning: Deleting webui.db will remove all stored data, including user accounts, settings, and passwords. Only do this if you truly want to start fresh!

webui.db

üìñ By following these straightforward steps, you'll regain access to your Open WebUI admin account in no time. If you encounter any issues during the process, please consider searching for your issue on forums or community platforms.