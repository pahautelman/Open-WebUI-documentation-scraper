reference: https://docs.openwebui.com/getting-started/advanced-topics/logging
title: ðŸ“œ Open WebUI Logging

ðŸš€ Getting StartedðŸ“š Advanced TopicsðŸ“œ Open WebUI Logging

ðŸš€ Getting Started

ðŸ“š Advanced Topics

ðŸ“œ Open WebUI Logging

Browser Client Loggingâ€‹

Client logging generally occurs via JavaScript console.log() and can be accessed using the built-in browser-specific developer tools:

console.log()

Blink Chrome/Chromium Edge Gecko Firefox WebKit Safari

Blink Chrome/Chromium Edge

Chrome/Chromium Edge

Chrome/Chromium

Edge

Gecko Firefox

Firefox

Firefox

WebKit Safari

Safari

Safari

Application Server/Backend Loggingâ€‹

Logging is an ongoing work-in-progress but some level of control is available using environment variables. Python Logging log() and print() statements send information to the console. The default level is INFO. Ideally, sensitive data will only be exposed with DEBUG level.

log()

print()

INFO

DEBUG

Logging Levelsâ€‹

The following logging levels values are supported:

CRITICAL

ERROR

WARNING

INFO

DEBUG

NOTSET

Globalâ€‹

The default global log level of INFO can be overridden with the GLOBAL_LOG_LEVEL environment variable. When set, this executes a basicConfig statement with the force argument set to True within config.py. This results in reconfiguration of all attached loggers:

INFO

GLOBAL_LOG_LEVEL

force

config.py

If this keyword argument is specified as true, any existing handlers attached to the root logger are removed and closed, before carrying out the configuration as specified by the other arguments.

The stream uses standard output (sys.stdout). In addition to all Open-WebUI log() statements, this also affects any imported Python modules that use the Python Logging module basicConfig mechanism including urllib.

sys.stdout

log()

basicConfig

For example, to set DEBUG logging level as a Docker parameter use:

DEBUG

--env GLOBAL_LOG_LEVEL="DEBUG"

--env GLOBAL_LOG_LEVEL="DEBUG"

or for Docker Compose put this in the environment section of the docker-compose.yml file (notice the absence of quotation signs):

environment: - GLOBAL_LOG_LEVEL=DEBUG

environment: - GLOBAL_LOG_LEVEL=DEBUG

App/Backendâ€‹

Some level of granularity is possible using any of the following combination of variables. Note that basicConfig force isn't presently used so these statements may only affect Open-WebUI logging and not 3rd party modules.

basicConfig

force

AUDIO_LOG_LEVEL

COMFYUI_LOG_LEVEL

CONFIG_LOG_LEVEL

DB_LOG_LEVEL

IMAGES_LOG_LEVEL

MAIN_LOG_LEVEL

MODELS_LOG_LEVEL

OLLAMA_LOG_LEVEL

OPENAI_LOG_LEVEL

RAG_LOG_LEVEL

WEBHOOK_LOG_LEVEL