reference: https://docs.openwebui.com/tutorials/tips/rag-tutorial
title: Tutorial: Configuring RAG with Open WebUI Documentation

📝 Tutorials💡 Tips & Tricks🔎 Open WebUI RAG Tutorial

📝 Tutorials

💡 Tips & Tricks

🔎 Open WebUI RAG Tutorial

This tutorial is a community contribution and is not supported by the Open WebUI team. It serves only as a demonstration on how to customize Open WebUI for your specific use case. Want to contribute? Check out the contributing tutorial.

In this tutorial, you will learn how to use Retrieval-Augmented Generation (RAG) with Open WebUI to load real-world documentation as a knowledge base. We will walk through how to use the latest Open WebUI Documentation as an example for this setup.

Overview​

What is RAG?​

Retrieval-Augmented Generation (RAG) combines LLMs with retrieved knowledge from external sources. The system retrieves relevant data from uploaded documents or knowledge bases, enhancing the quality and accuracy of responses.

This tutorial demonstrates how to:

Upload the latest Open WebUI Documentation as a knowledge base. Connect it to a custom model. Query the knowledge base for enhanced assistance.

Upload the latest Open WebUI Documentation as a knowledge base.

Connect it to a custom model.

Query the knowledge base for enhanced assistance.

Setup​

Step-by-Step Setup: Open WebUI Documentation as Knowledge Base​

Follow these steps to set up RAG with Open WebUI Documentation:

Download the Documentation: Download the latest documentation: https://github.com/open-webui/docs/archive/refs/heads/main.zip Extract the Files: Extract the main.zip file to get all documentation files. Locate the Markdown Files: In the extracted folder, locate all files with .md and .mdxextensions (tip: search for *.md*). Create a Knowledge Base: Navigate to Workspace > Knowledge > + Create a Knowledge Base. Name it: Open WebUI Documentation Purpose: Assistance Click Create Knowledge. Upload the Files: Drag and drop the .md and .mdx files from the extracted folder into the Open WebUI Documentation knowledge base.

Download the Documentation: Download the latest documentation: https://github.com/open-webui/docs/archive/refs/heads/main.zip

Download the Documentation:

Download the latest documentation: https://github.com/open-webui/docs/archive/refs/heads/main.zip

Download the latest documentation: https://github.com/open-webui/docs/archive/refs/heads/main.zip

Extract the Files: Extract the main.zip file to get all documentation files.

Extract the Files:

Extract the main.zip file to get all documentation files.

Extract the main.zip file to get all documentation files.

main.zip

Locate the Markdown Files: In the extracted folder, locate all files with .md and .mdxextensions (tip: search for *.md*).

Locate the Markdown Files:

In the extracted folder, locate all files with .md and .mdxextensions (tip: search for *.md*).

In the extracted folder, locate all files with .md and .mdxextensions (tip: search for *.md*).

.md

.mdx

*.md*

Create a Knowledge Base: Navigate to Workspace > Knowledge > + Create a Knowledge Base. Name it: Open WebUI Documentation Purpose: Assistance Click Create Knowledge.

Create a Knowledge Base:

Navigate to Workspace > Knowledge > + Create a Knowledge Base. Name it: Open WebUI Documentation Purpose: Assistance

Navigate to Workspace > Knowledge > + Create a Knowledge Base.

Navigate to Workspace > Knowledge > + Create a Knowledge Base.

Name it: Open WebUI Documentation

Name it: Open WebUI Documentation

Open WebUI Documentation

Purpose: Assistance

Purpose: Assistance

Click Create Knowledge.

Upload the Files: Drag and drop the .md and .mdx files from the extracted folder into the Open WebUI Documentation knowledge base.

Upload the Files:

Drag and drop the .md and .mdx files from the extracted folder into the Open WebUI Documentation knowledge base.

Drag and drop the .md and .mdx files from the extracted folder into the Open WebUI Documentation knowledge base.

.md

.mdx

Create and Configure the Model​

Create a Custom Model with the Knowledge Base​

Navigate to Models: Go to Workspace > Models > + Add New Model. Configure the Model: Name: Open WebUI Base Model: (Select the appropriate Llama or other available model) Knowledge Source: Select Open WebUI Documentation from the dropdown. Save the Model.

Navigate to Models: Go to Workspace > Models > + Add New Model.

Navigate to Models:

Go to Workspace > Models > + Add New Model.

Go to Workspace > Models > + Add New Model.

Configure the Model: Name: Open WebUI Base Model: (Select the appropriate Llama or other available model) Knowledge Source: Select Open WebUI Documentation from the dropdown.

Configure the Model:

Name: Open WebUI Base Model: (Select the appropriate Llama or other available model) Knowledge Source: Select Open WebUI Documentation from the dropdown.

Name: Open WebUI

Open WebUI

Base Model: (Select the appropriate Llama or other available model)

Knowledge Source: Select Open WebUI Documentation from the dropdown.

Save the Model.

Save the Model.

Examples and Usage​

Query the Open WebUI Documentation Model​

Start a New Chat: Navigate to New Chat and select the Open WebUI model. Example Queries: User: "How do I configure environment variables?"System: "Refer to Section 3.2: Use the `.env` file to manage configurations." User: "How do I update Open WebUI using Docker?"System: "Refer to `docker/updating.md`: Use `docker pull` and restart the container." With the RAG-enabled model, the system retrieves the most relevant sections from the documentation to answer your query.

Start a New Chat: Navigate to New Chat and select the Open WebUI model.

Start a New Chat:

Navigate to New Chat and select the Open WebUI model.

Navigate to New Chat and select the Open WebUI model.

Open WebUI

Example Queries: User: "How do I configure environment variables?"System: "Refer to Section 3.2: Use the `.env` file to manage configurations." User: "How do I update Open WebUI using Docker?"System: "Refer to `docker/updating.md`: Use `docker pull` and restart the container." With the RAG-enabled model, the system retrieves the most relevant sections from the documentation to answer your query.

Example Queries:

User: "How do I configure environment variables?"System: "Refer to Section 3.2: Use the `.env` file to manage configurations."

User: "How do I configure environment variables?"System: "Refer to Section 3.2: Use the `.env` file to manage configurations."

User: "How do I update Open WebUI using Docker?"System: "Refer to `docker/updating.md`: Use `docker pull` and restart the container."

User: "How do I update Open WebUI using Docker?"System: "Refer to `docker/updating.md`: Use `docker pull` and restart the container."

With the RAG-enabled model, the system retrieves the most relevant sections from the documentation to answer your query.

Next Steps​

Next Steps​

Add More Knowledge: Continue expanding your knowledge base by adding more documents.

Add More Knowledge: Continue expanding your knowledge base by adding more documents.

With this setup, you can effectively use the Open WebUI Documentation to assist users by retrieving relevant information for their queries. Enjoy building and querying your custom knowledge-enhanced models!